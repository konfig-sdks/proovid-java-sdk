/*
 * Proovid Electronic Verification
 * Proovid API is a RESTful application that specializes in electronic verification (Proof of address and Proof of Identity) by employing an advanced risk-tiered approacch in combination with a smart Risk assessment system. <a href='docs/PROOVid_ELV.pdf' target='_blank'>More information</a> 
 *
 * The version of the OpenAPI document: v1
 * Contact: info@proovid.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.AmlReport;
import com.konfigthis.client.model.DeleteAmlReport;
import com.konfigthis.client.model.NaturalPersonRequest;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ScreeningApi
 */
@Disabled
public class ScreeningApiTest {

    private static ScreeningApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new ScreeningApi(apiClient);
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAmlReportTest() throws ApiException {
        String reference = null;
        AmlReport response = api.getAmlReport(reference)
                .execute();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getNaturalPersonByIdTest() throws ApiException {
        Long id = null;
        AmlReport response = api.getNaturalPersonById(id)
                .execute();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeNaturalPersonTest() throws ApiException {
        Long id = null;
        DeleteAmlReport response = api.removeNaturalPerson(id)
                .execute();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void submitNaturalPersonScreeningTest() throws ApiException {
        Long naturalPersonId = null;
        String firstName = null;
        String middleName = null;
        String lastName = null;
        OffsetDateTime dob = null;
        String partialMatch = null;
        String document = null;
        String documentType = null;
        AmlReport response = api.submitNaturalPersonScreening()
                .naturalPersonId(naturalPersonId)
                .firstName(firstName)
                .middleName(middleName)
                .lastName(lastName)
                .dob(dob)
                .partialMatch(partialMatch)
                .document(document)
                .documentType(documentType)
                .execute();
        // TODO: test validations
    }

}
