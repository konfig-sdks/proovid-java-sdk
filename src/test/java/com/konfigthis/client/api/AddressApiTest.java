/*
 * Proovid Electronic Verification
 * Proovid API is a RESTful application that specializes in electronic verification (Proof of address and Proof of Identity) by employing an advanced risk-tiered approacch in combination with a smart Risk assessment system. <a href='docs/PROOVid_ELV.pdf' target='_blank'>More information</a> 
 *
 * The version of the OpenAPI document: v1
 * Contact: info@proovid.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.AddressRequest;
import com.konfigthis.client.model.AddressVerificationDeleteResult;
import com.konfigthis.client.model.AddressVerificationResult;
import java.io.File;
import com.konfigthis.client.model.GpsLocation;
import com.konfigthis.client.model.InfoGps;
import com.konfigthis.client.model.NaturalPersonELVRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AddressApi
 */
@Disabled
public class AddressApiTest {

    private static AddressApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new AddressApi(apiClient);
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createNaturalPersonElvTest() throws ApiException {
        Long naturalPersonIndexId = null;
        String street = null;
        String streetNumber = null;
        String unit = null;
        String zipCode = null;
        String city = null;
        String district = null;
        String region = null;
        String country = null;
        String email = null;
        String mobile = null;
        String fullAddress = null;
        AddressVerificationResult response = api.createNaturalPersonElv()
                .naturalPersonIndexId(naturalPersonIndexId)
                .street(street)
                .streetNumber(streetNumber)
                .unit(unit)
                .zipCode(zipCode)
                .city(city)
                .district(district)
                .region(region)
                .country(country)
                .email(email)
                .mobile(mobile)
                .fullAddress(fullAddress)
                .execute();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void linkResponseTest() throws ApiException {
        String link = null;
        List<GpsLocation> coords = null;
        api.linkResponse()
                .link(link)
                .coords(coords)
                .execute();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void verifyByIdTest() throws ApiException {
        Long id = null;
        AddressVerificationResult response = api.verifyById(id)
                .execute();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void verifyById_0Test() throws ApiException {
        Long id = null;
        AddressVerificationDeleteResult response = api.verifyById_0(id)
                .execute();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void verifyByLevelTest() throws ApiException {
        String referenceId = null;
        String email = null;
        Long naturalPersonId = null;
        Long naturalPersonIndexId = null;
        String name = null;
        String surname = null;
        String mobilePhone = null;
        String language = null;
        Integer verificationLevel = null;
        String document = null;
        String street = null;
        String streetNumber = null;
        String unit = null;
        String district = null;
        String city = null;
        String region = null;
        String zipCode = null;
        String country = null;
        String fullAddress = null;
        Boolean skipDocumentComparison = null;
        Integer validityPeriod = null;
        AddressVerificationResult response = api.verifyByLevel()
                .referenceId(referenceId)
                .email(email)
                .naturalPersonId(naturalPersonId)
                .naturalPersonIndexId(naturalPersonIndexId)
                .name(name)
                .surname(surname)
                .mobilePhone(mobilePhone)
                .language(language)
                .verificationLevel(verificationLevel)
                .document(document)
                .street(street)
                .streetNumber(streetNumber)
                .unit(unit)
                .district(district)
                .city(city)
                .region(region)
                .zipCode(zipCode)
                .country(country)
                .fullAddress(fullAddress)
                .skipDocumentComparison(skipDocumentComparison)
                .validityPeriod(validityPeriod)
                .execute();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void verifyCertificatePdfTest() throws ApiException {
        Integer id = null;
        File response = api.verifyCertificatePdf(id)
                .execute();
        // TODO: test validations
    }

}
