/*
 * Proovid Electronic Verification
 * Proovid API is a RESTful application that specializes in electronic verification (Proof of address and Proof of Identity) by employing an advanced risk-tiered approacch in combination with a smart Risk assessment system. <a href='docs/PROOVid_ELV.pdf' target='_blank'>More information</a> 
 *
 * The version of the OpenAPI document: v1
 * Contact: info@proovid.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.Error;
import com.konfigthis.client.model.Info;
import com.konfigthis.client.model.VerificationData;
import com.konfigthis.client.model.VerificationResult;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * ShuftiAddressDataResponse
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class ShuftiAddressDataResponse {
  public static final String SERIALIZED_NAME_INFO = "info";
  @SerializedName(SERIALIZED_NAME_INFO)
  private Info info;

  public static final String SERIALIZED_NAME_REFERENCE = "reference";
  @SerializedName(SERIALIZED_NAME_REFERENCE)
  private String reference;

  public static final String SERIALIZED_NAME_EVENT = "event";
  @SerializedName(SERIALIZED_NAME_EVENT)
  private String event;

  public static final String SERIALIZED_NAME_ERROR = "error";
  @SerializedName(SERIALIZED_NAME_ERROR)
  private Error error;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_COUNTRY = "country";
  @SerializedName(SERIALIZED_NAME_COUNTRY)
  private String country;

  public static final String SERIALIZED_NAME_VERIFICATION_DATA = "verificationData";
  @SerializedName(SERIALIZED_NAME_VERIFICATION_DATA)
  private VerificationData verificationData;

  public static final String SERIALIZED_NAME_VERIFICATION_RESULT = "verificationResult";
  @SerializedName(SERIALIZED_NAME_VERIFICATION_RESULT)
  private VerificationResult verificationResult;

  public static final String SERIALIZED_NAME_DECLINED_REASON = "declinedReason";
  @SerializedName(SERIALIZED_NAME_DECLINED_REASON)
  private String declinedReason;

  public static final String SERIALIZED_NAME_DECLINED_CODES = "declinedCodes";
  @SerializedName(SERIALIZED_NAME_DECLINED_CODES)
  private List<String> declinedCodes = null;

  public ShuftiAddressDataResponse() {
  }

  public ShuftiAddressDataResponse info(Info info) {
    
    
    
    
    this.info = info;
    return this;
  }

   /**
   * Get info
   * @return info
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Info getInfo() {
    return info;
  }


  public void setInfo(Info info) {
    
    
    
    this.info = info;
  }


  public ShuftiAddressDataResponse reference(String reference) {
    
    
    
    
    this.reference = reference;
    return this;
  }

   /**
   * Get reference
   * @return reference
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getReference() {
    return reference;
  }


  public void setReference(String reference) {
    
    
    
    this.reference = reference;
  }


  public ShuftiAddressDataResponse event(String event) {
    
    
    
    
    this.event = event;
    return this;
  }

   /**
   * Get event
   * @return event
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEvent() {
    return event;
  }


  public void setEvent(String event) {
    
    
    
    this.event = event;
  }


  public ShuftiAddressDataResponse error(Error error) {
    
    
    
    
    this.error = error;
    return this;
  }

   /**
   * Get error
   * @return error
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Error getError() {
    return error;
  }


  public void setError(Error error) {
    
    
    
    this.error = error;
  }


  public ShuftiAddressDataResponse email(String email) {
    
    
    
    
    this.email = email;
    return this;
  }

   /**
   * Get email
   * @return email
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEmail() {
    return email;
  }


  public void setEmail(String email) {
    
    
    
    this.email = email;
  }


  public ShuftiAddressDataResponse country(String country) {
    
    
    
    
    this.country = country;
    return this;
  }

   /**
   * Get country
   * @return country
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCountry() {
    return country;
  }


  public void setCountry(String country) {
    
    
    
    this.country = country;
  }


  public ShuftiAddressDataResponse verificationData(VerificationData verificationData) {
    
    
    
    
    this.verificationData = verificationData;
    return this;
  }

   /**
   * Get verificationData
   * @return verificationData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public VerificationData getVerificationData() {
    return verificationData;
  }


  public void setVerificationData(VerificationData verificationData) {
    
    
    
    this.verificationData = verificationData;
  }


  public ShuftiAddressDataResponse verificationResult(VerificationResult verificationResult) {
    
    
    
    
    this.verificationResult = verificationResult;
    return this;
  }

   /**
   * Get verificationResult
   * @return verificationResult
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public VerificationResult getVerificationResult() {
    return verificationResult;
  }


  public void setVerificationResult(VerificationResult verificationResult) {
    
    
    
    this.verificationResult = verificationResult;
  }


  public ShuftiAddressDataResponse declinedReason(String declinedReason) {
    
    
    
    
    this.declinedReason = declinedReason;
    return this;
  }

   /**
   * Get declinedReason
   * @return declinedReason
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDeclinedReason() {
    return declinedReason;
  }


  public void setDeclinedReason(String declinedReason) {
    
    
    
    this.declinedReason = declinedReason;
  }


  public ShuftiAddressDataResponse declinedCodes(List<String> declinedCodes) {
    
    
    
    
    this.declinedCodes = declinedCodes;
    return this;
  }

  public ShuftiAddressDataResponse addDeclinedCodesItem(String declinedCodesItem) {
    if (this.declinedCodes == null) {
      this.declinedCodes = new ArrayList<>();
    }
    this.declinedCodes.add(declinedCodesItem);
    return this;
  }

   /**
   * Get declinedCodes
   * @return declinedCodes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getDeclinedCodes() {
    return declinedCodes;
  }


  public void setDeclinedCodes(List<String> declinedCodes) {
    
    
    
    this.declinedCodes = declinedCodes;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the ShuftiAddressDataResponse instance itself
   */
  public ShuftiAddressDataResponse putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ShuftiAddressDataResponse shuftiAddressDataResponse = (ShuftiAddressDataResponse) o;
    return Objects.equals(this.info, shuftiAddressDataResponse.info) &&
        Objects.equals(this.reference, shuftiAddressDataResponse.reference) &&
        Objects.equals(this.event, shuftiAddressDataResponse.event) &&
        Objects.equals(this.error, shuftiAddressDataResponse.error) &&
        Objects.equals(this.email, shuftiAddressDataResponse.email) &&
        Objects.equals(this.country, shuftiAddressDataResponse.country) &&
        Objects.equals(this.verificationData, shuftiAddressDataResponse.verificationData) &&
        Objects.equals(this.verificationResult, shuftiAddressDataResponse.verificationResult) &&
        Objects.equals(this.declinedReason, shuftiAddressDataResponse.declinedReason) &&
        Objects.equals(this.declinedCodes, shuftiAddressDataResponse.declinedCodes)&&
        Objects.equals(this.additionalProperties, shuftiAddressDataResponse.additionalProperties);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(info, reference, event, error, email, country, verificationData, verificationResult, declinedReason, declinedCodes, additionalProperties);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ShuftiAddressDataResponse {\n");
    sb.append("    info: ").append(toIndentedString(info)).append("\n");
    sb.append("    reference: ").append(toIndentedString(reference)).append("\n");
    sb.append("    event: ").append(toIndentedString(event)).append("\n");
    sb.append("    error: ").append(toIndentedString(error)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    verificationData: ").append(toIndentedString(verificationData)).append("\n");
    sb.append("    verificationResult: ").append(toIndentedString(verificationResult)).append("\n");
    sb.append("    declinedReason: ").append(toIndentedString(declinedReason)).append("\n");
    sb.append("    declinedCodes: ").append(toIndentedString(declinedCodes)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("info");
    openapiFields.add("reference");
    openapiFields.add("event");
    openapiFields.add("error");
    openapiFields.add("email");
    openapiFields.add("country");
    openapiFields.add("verificationData");
    openapiFields.add("verificationResult");
    openapiFields.add("declinedReason");
    openapiFields.add("declinedCodes");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ShuftiAddressDataResponse
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!ShuftiAddressDataResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ShuftiAddressDataResponse is not found in the empty JSON string", ShuftiAddressDataResponse.openapiRequiredFields.toString()));
        }
      }
      // validate the optional field `info`
      if (jsonObj.get("info") != null && !jsonObj.get("info").isJsonNull()) {
        Info.validateJsonObject(jsonObj.getAsJsonObject("info"));
      }
      if (!jsonObj.get("reference").isJsonNull() && (jsonObj.get("reference") != null && !jsonObj.get("reference").isJsonNull()) && !jsonObj.get("reference").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `reference` to be a primitive type in the JSON string but got `%s`", jsonObj.get("reference").toString()));
      }
      if (!jsonObj.get("event").isJsonNull() && (jsonObj.get("event") != null && !jsonObj.get("event").isJsonNull()) && !jsonObj.get("event").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `event` to be a primitive type in the JSON string but got `%s`", jsonObj.get("event").toString()));
      }
      // validate the optional field `error`
      if (jsonObj.get("error") != null && !jsonObj.get("error").isJsonNull()) {
        Error.validateJsonObject(jsonObj.getAsJsonObject("error"));
      }
      if (!jsonObj.get("email").isJsonNull() && (jsonObj.get("email") != null && !jsonObj.get("email").isJsonNull()) && !jsonObj.get("email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email").toString()));
      }
      if (!jsonObj.get("country").isJsonNull() && (jsonObj.get("country") != null && !jsonObj.get("country").isJsonNull()) && !jsonObj.get("country").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `country` to be a primitive type in the JSON string but got `%s`", jsonObj.get("country").toString()));
      }
      // validate the optional field `verificationData`
      if (jsonObj.get("verificationData") != null && !jsonObj.get("verificationData").isJsonNull()) {
        VerificationData.validateJsonObject(jsonObj.getAsJsonObject("verificationData"));
      }
      // validate the optional field `verificationResult`
      if (jsonObj.get("verificationResult") != null && !jsonObj.get("verificationResult").isJsonNull()) {
        VerificationResult.validateJsonObject(jsonObj.getAsJsonObject("verificationResult"));
      }
      if (!jsonObj.get("declinedReason").isJsonNull() && (jsonObj.get("declinedReason") != null && !jsonObj.get("declinedReason").isJsonNull()) && !jsonObj.get("declinedReason").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `declinedReason` to be a primitive type in the JSON string but got `%s`", jsonObj.get("declinedReason").toString()));
      }
      // ensure the optional json data is an array if present (nullable)
      if (jsonObj.get("declinedCodes") != null && !jsonObj.get("declinedCodes").isJsonNull() && !jsonObj.get("declinedCodes").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `declinedCodes` to be an array in the JSON string or null but got `%s`", jsonObj.get("declinedCodes").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ShuftiAddressDataResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ShuftiAddressDataResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ShuftiAddressDataResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ShuftiAddressDataResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<ShuftiAddressDataResponse>() {
           @Override
           public void write(JsonWriter out, ShuftiAddressDataResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public ShuftiAddressDataResponse read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             ShuftiAddressDataResponse instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ShuftiAddressDataResponse given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ShuftiAddressDataResponse
  * @throws IOException if the JSON string is invalid with respect to ShuftiAddressDataResponse
  */
  public static ShuftiAddressDataResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ShuftiAddressDataResponse.class);
  }

 /**
  * Convert an instance of ShuftiAddressDataResponse to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

